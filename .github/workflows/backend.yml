name: API Platform Workflow

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer Dependencies
        run: |
          cd backend/api && composer install --no-scripts --no-interaction

      - name: Run Tests
        run: |
          cd backend/api && bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: Production
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create .env.local File
        env:
          JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
          MAILER_DSN: ${{ secrets.MAILER_DSN }}
          WEBSITE_URI: ${{ secrets.WEBSITE_URI }}
          CADDY_MERCURE_JWT_SECRET: -!ChangeThisMercureHubJWTSecretKey!
          TRUSTED_PROXIES: -127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          TRUSTED_HOSTS: -^${SERVER_NAME:-furrchop.me}|php$$
          DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
          CADDY_MERCURE_URL: -http://php/.well-known/mercure
          POSTGRES_DB: -app
          POSTGRES_USER: -app
          POSTGRES_PASSWORD: -!ChangeMe!
          POSTGRES_VERSION: -15
          POSTGRES_CHARSET: -utf8
          MERCURE_PUBLISHER_JWT_KEY: -!ChangeThisMercurePublisherJWTKey!
          MERCURE_SUBSCRIBER_JWT_KEY: -!ChangeThisMercureSubscriberJWTKey!
          MERCURE_URL: -http://php/.well-known/mercure
          MERCURE_PUBLIC_URL: -https://${SERVER_NAME:-localhost}/.well-known/mercure
        run: |
          envsubst < backend/api/.env.local.template > backend/api/.env.local

      - name: Add SSH Key to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for furrchop-api
        uses: docker/build-push-action@v2
        with:
          context: ./backend/api
          file: ./backend/api/Dockerfile
          push: true
          tags: twiney/furrchop-api:latest
      - name: Deploy with Docker
        env:
          SERVER_SSH: ${{ secrets.SERVER_SSH }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          # Copy the Docker Compose file to the server
          scp -r ./backend ${{ env.SERVER_SSH }}:${{ env.SERVER_PATH }}
          # Run docker-compose on the server using the compose file
          ssh ${{ env.SERVER_SSH }} 'cd ${{ env.SERVER_PATH }}/backend && docker-compose -f compose.yaml -f compose.prod.yaml up -d --build'
