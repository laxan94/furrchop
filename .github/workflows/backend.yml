name: API Platform Workflow

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer Dependencies
        run: |
          cd backend/api && composer install --no-scripts --no-interaction

      - name: Run Tests
        run: |
          cd backend/api && bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: Production
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create .env.local File
        env:
          JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
          MAILER_DSN: ${{ secrets.MAILER_DSN }}
          WEBSITE_URI: ${{ secrets.WEBSITE_URI }}
          CADDY_MERCURE_JWT_SECRET: ${{secrets.CADDY_MERCURE_JWT_SECRET}}
          TRUSTED_PROXIES: ${{secrets.TRUSTED_PROXIES}}
          TRUSTED_HOSTS: ${{secrets.TRUSTED_HOSTS}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          CADDY_MERCURE_URL: ${{secrets.CADDY_MERCURE_URL}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_VERSION: ${{secrets.POSTGRES_VERSION}}
          POSTGRES_CHARSET: ${{secrets.POSTGRES_CHARSET}}
          MERCURE_PUBLISHER_JWT_KEY: ${{secrets.MERCURE_PUBLISHER_JWT_KEY}}
          MERCURE_SUBSCRIBER_JWT_KEY: ${{secrets.MERCURE_SUBSCRIBER_JWT_KEY}}
          MERCURE_URL: ${{secrets.MERCURE_URL}}
          MERCURE_PUBLIC_URL: ${{secrets.MERCURE_PUBLIC_URL}}
          SERVER_NAME: ${{secrets.SERVER_NAME}}
        run: |
          envsubst < backend/api/.env.local.template > backend/api/.env.local

      - name: Add SSH Key to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for furrchop-api
        uses: docker/build-push-action@v2
        with:
          context: ./backend/api
          file: ./backend/api/Dockerfile
          push: true
          tags: twiney/furrchop-api:latest
      - name: Deploy with Docker
        env:
          SERVER_SSH: ${{ secrets.SERVER_SSH }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          # Copy the Docker Compose file to the server
          scp -r ./backend ${{ env.SERVER_SSH }}:${{ env.SERVER_PATH }}
          # Run docker-compose on the server using the compose file
          ssh ${{ env.SERVER_SSH }} 'cd ${{ env.SERVER_PATH }}/backend && docker-compose -f compose.yaml -f compose.prod.yaml build && docker-compose up -d database && docker-compose up -d'

      - name: Generate JWT keys
        run: |
          mkdir -p ./backend/api/config/jwt
          openssl genpkey -out backend/api/config/jwt/private.pem -algorithm rsa -pkeyopt rsa_keygen_bits:4096
          openssl pkey -in backend/api/config/jwt/private.pem -out backend/api/config/jwt/public.pem -pubout

